@import '../variables';

@mixin make_size_variants($variant_ratio) {
  padding: (.375rem * $variant_ratio) (.75rem * $variant_ratio);
  font-size: calc(#{$variant_ratio} * var(--app-size-font));
}

@mixin button_base {
  display: inline-block;
  border: none;
  border-radius: var(--app-size-radius);
  padding: .375rem .75rem;

  & + & {
    margin-right: .5rem;
  }

  &:hover, &:focus, &:active {
    outline: 0;
  }
}

@mixin button_fill_default_base() {
  background: var(--app-color-foreground);
  color: var(--app-color-background); 
  
  &:hover, &:focus, &:active {
    background: var(--app-color-foreground-shade);
    color: var(--app-color-background);
    text-decoration: none;
  }

  &:focus, &:active {
    box-shadow: 0 0 0 .25rem rgba(var(--app-color-foreground-rgb), .3);
  }
  
  &:disabled {
    opacity: 1;
    background: rgba(var(--app-color-foreground-rgb), .5);
    color: rgba(var(--app-color-background-rgb), .5);
    box-shadow: none;
  }
}

@mixin button_fill_base($palette) {
  background: var(--app-color-#{$palette});
  color: var(--app-color-#{$palette}-contrast);
  
  &:hover, &:focus, &:active {
    background: var(--app-color-#{$palette}-shade);
    color: var(--app-color-#{$palette}-contrast);
    text-decoration: none;
  }

  &:focus, &:active {
    box-shadow: 0 0 0 .25rem rgba(var(--app-color-#{$palette}-rgb), .3);
  }

  &:disabled {
    opacity: 1;
    background: rgba(var(--app-color-#{$palette}-rgb), .5);
    color: rgba(var(--app-color-#{$palette}-contrast-rgb), .5);
    box-shadow: none;
  }
}

@mixin button_outline_default_base() {
  background: none;
  border: var(--app-size-border) solid var(--app-color-foreground);
  color: var(--app-color-foreground);
  
  &:hover, &:focus, &:active {
    background: var(--app-color-foreground);
    border: var(--app-size-border) solid var(--app-color-foreground);
    color: var(--app-color-background);
    text-decoration: none;
  }

  &:focus, &:active {
    box-shadow: 0 0 0 .25rem rgba(var(--app-color-foreground-rgb), .3);
  }

  &:disabled {
    opacity: 1;
    border: var(--app-size-border) solid rgba(var(--app-color-foreground-rgb), .5);
    color: rgba(var(--app-color-foreground-rgb), .5);
    box-shadow: none;
    background: none;
  }
}

@mixin button_outline_base($palette) {
  background: none;
  border: var(--app-size-border) solid var(--app-color-#{$palette});
  color: var(--app-color-#{$palette});

  &:hover, &:focus, &:active {
    background: var(--app-color-#{$palette});
    border: var(--app-size-border) solid var(--app-color-#{$palette});
    color: var(--app-color-#{$palette}-contrast);
    text-decoration: none;
  }

  &:focus, &:active {
    box-shadow: 0 0 0 .25rem rgba(var(--app-color-#{$palette}-rgb), .3);
  }

  &:disabled {
    opacity: 1;
    border: var(--app-size-border) solid rgba(var(--app-color-#{$palette}-rgb), .5);
    color: rgba(var(--app-color-#{$palette}-rgb), .5);
    box-shadow: none;
    background: none;
  }
}

.button {

  // fill buttons
  & {
    
    /// .button
    & {
      @include button_base();
      @include button_fill_default_base();

      // ---
      @each $variant_name, $variant_ratio in $size_variants {
  
        /// .button-sm
        &-#{$variant_name} {
          @include button_base();
          @include button_fill_default_base();
          @include make_size_variants($variant_ratio);
        }
      }      
    }

    // ---
    @each $palette in $palettes {
  
      /// .button-primary
      &-#{$palette} {
        @include button_base();
        @include button_fill_base($palette);
      }
  
      // ---
      @each $variant_name, $variant_ratio in $size_variants {
  
        /// .button-primary-sm
        &-#{$palette}-#{$variant_name} {
          @include button_base();
          @include button_fill_base($palette);
          @include make_size_variants($variant_ratio);
        }
      }
    }
  }

  // outline buttons
  &-outline {
    
    /// .button-outline
    & {
      @include button_base();
      @include button_outline_default_base();

      // ---
      @each $variant_name, $variant_ratio in $size_variants {
  
        /// .button-outline-sm
        &-#{$variant_name} {
          @include button_base();
          @include button_outline_default_base();
          @include make_size_variants($variant_ratio);
        }
      }
    }

    // ---
    @each $palette in $palettes {

      /// .button-outline-primary
      &-#{$palette} {
        @include button_base();
        @include button_outline_base($palette);
      }

      // ---
      @each $variant_name, $variant_ratio in $size_variants {
  
        /// .button-outline-primary-sm
        &-#{$palette}-#{$variant_name} {
          @include button_base();
          @include button_outline_base($palette);
          @include make_size_variants($variant_ratio);
        }
      }
    }
  }

  // link buttons
  &-link {
    @include button_base();
    
    /// .button-link
    & {
      background: none;
      color: var(--app-color-primary);
      
      &:hover, &:focus, &:active {
        background: none;
        text-decoration: underline;
        color: var(--app-color-primary-shade);
      }

      &:disabled {
        color: rgba(var(--app-color-primary), .5);
        text-decoration: none;
      }
    }
  }

  // clear button
  &-clear {

    /// button-clear
    & {
      @include button_base();

      & {
        background: none;
        border: none;
        color: var(--app-color-foreground);
        border: var(--app-size-border) solid rgba(0, 0, 0, 0);
        border-radius: var(--app-size-radius);

        &:hover {
          color: var(--app-color-foreground-shade);
        }

        &:focus, &:active {
          border-color: var(--app-color-foreground);
        }

        &:disabled {
          color: rgba(var(--app-color-foreground), .5);
        }
      }
    }

    // ---
    @each $palette in $palettes {

      /// .button-clear-primary
      &-#{$palette} {
        @include button_base();

        & {
          background: none;
          border: none;
          color: var(--app-color-#{$palette});
          border: var(--app-size-border) solid rgba(0, 0, 0, 0);
          border-radius: var(--app-size-radius);
          
          &:hover {
            color: var(--app-color-#{$palette}-shade);
          }

          &:focus, &:active {
            border-color: var(--app-color-#{$palette});
          }
          
          &:disabled {
            color: rgba(var(--app-color-#{$palette}), .5);
          }
        }
      }
    }
  }
}
